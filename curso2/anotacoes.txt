app-> aplica para todas as páginas -> _app.js em pages
Document-> aplica em todos os documentos (head, html)-> _document.js

Colocar na pasta posts ja cria uma rota, se o nome do doc for com [id]em volta fica dinâmico, o nome do que foi passado(url) vira um query do router

a!=Link-> Link não recarrega a página de novo -> single page application
arquivo estático acessa por link "/images/foto.png"
next export-> para subir projeto estático
getstaticprops: pré-carrega página antes, usar com getstaticPath para projetos estaticos

Incremental Static Generation->muitas páginas
fallback->não existe ainda->rotas[], fallback blocking, carrega por demanda 

revalidate-> revalida a cada tempo a respota da API, site com muito acesso usa isso

link prefetch = true ja dá pre download, com false se passar o mouse já da download

dynamicImport -> cont x = dynamic(()=> import'path'), const so vai ser carregada quando x for chamada

pasta API emm pages -> define status e respostas

existe os tipos GetServerSideProps e GetStaticProps

- **Static**
    - por padrão
    - Só vai usar o `next export` em casos onde TUDO é pré renderizado
        - `getStaticProps`: versão com menos recursos

- **Static/SSG (Static Site Generation)**:
    - `getStaticProps`
        - `revalidate`: true [npm run build && npm start]
    - **Incremental Static Generation** [npm run build && npm start]
        - fallback: true || 'blocking' e o getStaticPaths vem vazio com somente alguns itens
        
- **SSR(Server Side Props)**:
    -`getServerSideProps`
    - Se tiver dentro da pasta `/api` é uma API Route é SSR